#ifndef CONTROLLER_H
#define CONTROLLER_H
#include "point3d.h"
#include "figure.h"
#include "affine_transform.h"
#include "inputLoader.h"

#define FILE_PATH "/home/chel/2022/University/OOP/lab_01/firstLab/test.txt"

static figure_t figure;

typedef enum
{
    ROTATE,
    MOVE,
    SCALE,
    SET_CENTER,
    GET_FIGURE,
    UNKNOWN
}ACTIONS;

int make_action(ACTIONS action, point_3D_t value)
{
    switch (action)
    {
        case ROTATE:
            break;
        case MOVE:
            break;
        case SCALE:
            break;
        case SET_CENTER:
            break;
        case GET_FIGURE:
            break;
        case UNKNOWN:
            break;
    }
}

int rotate_figure(point_3D_t values)
{
    int rc = SUCCESS;
    matrix_t matrix;
    rc = rotate_matrix(matrix, values, figure.figure_center);
    rc = rc == SUCCESS ? add_transformation(figure, matrix) : ;
    free_matrix(matrix);
    return rc;
}

int translate_figure(point_3D_t values)
{
    int rc = SUCCESS;
    matrix_t matrix;
    rc = translate_matrix(matrix, values);
    rc = rc == SUCCESS ? add_transformation(figure, matrix) : rc;
    rc = rc == SUCCESS ? free_matrix(matrix) : rc;
    return rc;
}

int scale_figure(point_3D_t values)
{
    int rc = SUCCESS;
    matrix_t matrix;
    rc = scale_matrix(matrix, values, figure.figure_center);
    rc = rc == SUCCESS ? add_transformation(figure, matrix) : rc;
    rc = rc == SUCCESS ? free_matrix(matrix) : rc;
    return rc;
}

int init_figure()
{
    return load_from_file(figure, FILE_PATH);
}

#endif